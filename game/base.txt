console.log("init");
/*
var game = new Phaser.Game(800, 600, Phaser.CANVAS, 'phaser-example', { preload: preload, create: create, update: update, render: render });

function preload() {
    game.load.image('car', 'img/car90.png');
}

var car;
var cursors;
var spaceKey;

function create() {

    game.physics.startSystem(Phaser.Physics.ARCADE);

    car = game.add.sprite(400, 300, 'car');
    car.name = 'car';
    car.anchor.set(0.5);

    game.physics.enable(car, Phaser.Physics.ARCADE);

    car.body.collideWorldBounds = true;
    car.body.bounce.set(0.8);
    car.body.allowRotation = true;
    car.body.immovable = true;

    cursors = game.input.keyboard.createCursorKeys();

    spaceKey = this.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);
    spaceKey.onDown.add(togglePause, this);

}

function togglePause() {

    game.physics.arcade.isPaused = (game.physics.arcade.isPaused) ? false : true;

}

function update() {

    game.physics.arcade.collide(car);

    car.body.velocity.x = 0;
    car.body.velocity.y = 0;
    car.body.angularVelocity = 0;

    if (cursors.left.isDown)
    {
        car.body.angularVelocity = -200;
    }
    else if (cursors.right.isDown)
    {
        car.body.angularVelocity = 200;
    }

    if (cursors.up.isDown)
    {
        car.body.velocity.copyFrom(game.physics.arcade.velocityFromAngle(car.angle, 300));
    }

}

function render() {
}
*/
/**
* @author       Chris Campbell <iforce2d@gmail.com>
* @author       Richard Davey <rich@photonstorm.com>
* @copyright    2015 Photon Storm Ltd.
* @license      {@link http://choosealicense.com/licenses/no-license/|No License}
* 
* @description  This example requires the Phaser Box2D Plugin to run.
*               For more details please see http://phaser.io/shop/plugins/box2d
*/

var game = new Phaser.Game(800, 600, Phaser.CANVAS, 'phaser-example', { preload: preload, create: create, render: render });

function preload() {

    game.load.image('contra2', 'img/contra2.png');
    game.load.image('bunny', 'img/bunny.png');
    game.load.image('tetrisblock1', 'img/tetrisblock1.png');
    game.load.image('tetrisblock2', 'img/tetrisblock2.png');
    game.load.image('tetrisblock3', 'img/tetrisblock3.png');

    game.load.image('carsblock', 'img/car90.png');

    //  Load our physics data exported from PhysicsEditor
    game.load.physics('physicsData', 'sprites.json');

}

var contra;
var bunny;
var tetris1;
var tetris2;
var tetris3;
var cars;

var start = false;

function create() {
    
    game.stage.backgroundColor = '#124184';

    // Enable Box2D physics
    game.physics.startSystem(Phaser.Physics.BOX2D);
    game.physics.box2d.setBoundsToWorld();

    contra = game.add.sprite(200, 20, 'contra2');
    bunny = game.add.sprite(500, 250, 'bunny');
    tetris1 = game.add.sprite(100, 400, 'tetrisblock1');
    tetris2 = game.add.sprite(300, 450, 'tetrisblock2');
    tetris3 = game.add.sprite(600, 450, 'tetrisblock3');

    cars     = game.add.sprite(50, 50, 'carsblock');

    // Enable the physics bodies on all the sprites
    game.physics.box2d.enable([ contra, bunny, tetris1, tetris2, tetris3, cars ]);

    // Clear the shapes
    contra.body.clearFixtures();
    bunny.body.clearFixtures();
    tetris1.body.clearFixtures();
    tetris2.body.clearFixtures();
    tetris3.body.clearFixtures();

    cars.body.clearFixtures();
    
    // Load polygons from the physicsData JSON file in the cache
/*    contra.body.loadPolygon('physicsData', 'contra2', contra);
    bunny.body.loadPolygon('physicsData', 'bunny', bunny);
    tetris1.body.loadPolygon('physicsData', 'tetrisblock1', tetris1);
    tetris2.body.loadPolygon('physicsData', 'tetrisblock2', tetris2);
    tetris3.body.loadPolygon('physicsData', 'tetrisblock3', tetris3);*/

    cars.body.loadPolygon('physicsData', 'carsblock', cars);
    
    // Set up handlers for mouse events
    game.input.onDown.add(mouseDragStart, this);
    game.input.addMoveCallback(mouseDragMove, this);
    game.input.onUp.add(mouseDragEnd, this);
    
    game.add.text(5, 5, 'Shapes are exported from PhysicsEditor. Use mouse to drag bodies.', { fill: '#ffffff', font: '14pt Arial' });
}

function mouseDragStart() { 
    game.physics.box2d.mouseDragStart(game.input.mousePointer);    
}

function mouseDragMove() {  
    game.physics.box2d.mouseDragMove(game.input.mousePointer);    
}

function mouseDragEnd() {   
    game.physics.box2d.mouseDragEnd();    
}

function render() {
    
    game.debug.box2dWorld();
    
}